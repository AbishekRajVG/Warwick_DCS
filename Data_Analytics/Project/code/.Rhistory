coord_flip() + theme_fivethirtyeight() +
theme(text = element_text(size = 10),element_line(size=3)) +
scale_fill_manual(name="",values = viridis::viridis(75)) +
guides(fill=guide_legend(ncol=6)) +
theme(legend.text= element_text(size=6),
legend.key.size = unit(.1, "cm"),
legend.position=c(.65,.20)) +
labs(title="Number of victories per Driver",
subtitle="only drivers with 2 or more wins are shown.")
winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 22, xmax = 50, ymin = 31, ymax = 90)
#winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 30, xmax = 30, ymin = 29, ymax = 95)
winsDis<-results_3 %>%
filter(position==1) %>%
group_by(driverRef, circuitRef) %>%
summarize(count=n()) %>%
mutate(allWins = sum(count)) %>%
ggplot(aes(x=allWins)) +
geom_histogram(bins=30) + theme_fivethirtyeight() + ggtitle("Distribution of the number of victories") + theme(plot.title = element_text(size=8.5))
winsBar<-results_3 %>%
dplyr::filter(position==1) %>%
dplyr::group_by(driverRef, circuitRef) %>%
dplyr::summarize(count=n()) %>%
dplyr::mutate(allWins = sum(count)) %>%
dplyr::filter(allWins>2) %>%
ggplot(aes(x=reorder(driverRef, allWins),y= count)) +
geom_bar(aes(fill=circuitRef),stat='identity',color='white',size=.05) +
coord_flip() + theme_fivethirtyeight() +
theme(text = element_text(size = 10),element_line(size=3)) +
scale_fill_manual(name="",values = viridis::viridis(75)) +
guides(fill=guide_legend(ncol=6)) +
theme(legend.text= element_text(size=6),
legend.key.size = unit(.1, "cm"),
legend.position=c(.65,.20)) +
labs(title="Number of victories per Driver",
subtitle="only drivers with 2 or more wins are shown.")
winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 22, xmax = 50, ymin = 31, ymax = 90)
#winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 30, xmax = 30, ymin = 29, ymax = 95)
winsDis<-results_3 %>%
filter(position==1) %>%
group_by(driverRef, circuitRef) %>%
summarize(count=n()) %>%
mutate(allWins = sum(count)) %>%
ggplot(aes(x=allWins)) +
geom_histogram(bins=30) + theme_fivethirtyeight() + ggtitle("Distribution of the number of victories") + theme(plot.title = element_text(size=8.5))
winsBar<-results_3 %>%
dplyr::filter(position==1) %>%
dplyr::group_by(driverRef, circuitRef) %>%
dplyr::summarize(count=n()) %>%
dplyr::mutate(allWins = sum(count)) %>%
dplyr::filter(allWins>2) %>%
ggplot(aes(x=reorder(driverRef, allWins),y= count)) +
geom_bar(aes(fill=circuitRef),stat='identity',color='white',size=.05) +
coord_flip() + theme_fivethirtyeight() +
theme(text = element_text(size = 10),element_line(size=3)) +
scale_fill_manual(name="",values = viridis::viridis(75)) +
guides(fill=guide_legend(ncol=6)) +
theme(legend.text= element_text(size=6),
legend.key.size = unit(.1, "cm"),
legend.position=c(.65,.20)) +
labs(title="Number of victories per Driver",
subtitle="only drivers with 2 or more wins are shown.")
winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 22, xmax = 50, ymin = 31, ymax = 90)
#winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 30, xmax = 30, ymin = 29, ymax = 95)
winsDis<-results_3 %>%
filter(position==1) %>%
group_by(driverRef, circuitRef) %>%
summarize(count=n()) %>%
mutate(allWins = sum(count)) %>%
ggplot(aes(x=allWins)) +
geom_histogram(bins=30) + theme_fivethirtyeight() + ggtitle("Distribution of the number of victories") + theme(plot.title = element_text(size=8.5))
winsBar<-results_3 %>%
dplyr::filter(position==1) %>%
dplyr::group_by(driverRef, circuitRef) %>%
dplyr::summarize(count=n()) %>%
dplyr::mutate(allWins = sum(count)) %>%
dplyr::filter(allWins>2) %>%
ggplot(aes(x=reorder(driverRef, allWins),y= count)) +
geom_bar(aes(fill=circuitRef),stat='identity',color='white',size=.05) +
coord_flip() + theme_fivethirtyeight() +
theme(text = element_text(size = 10),element_line(size=3)) +
scale_fill_manual(name="",values = viridis::viridis(75)) +
guides(fill=guide_legend(ncol=6)) +
theme(legend.text= element_text(size=6),
legend.key.size = unit(.1, "cm"),
legend.position=c(.65,.20)) +
labs(title="Number of victories per Driver",
subtitle="only drivers with 2 or more wins are shown.")
winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 22, xmax = 50, ymin = 31, ymax = 90)
#winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 30, xmax = 30, ymin = 29, ymax = 95)
winsDis<-results_3 %>%
filter(position==1) %>%
group_by(driverRef, circuitRef) %>%
summarize(count=n()) %>%
mutate(allWins = sum(count)) %>%
ggplot(aes(x=allWins)) +
geom_histogram(bins=30) + theme_fivethirtyeight() + ggtitle("Distribution of the number of victories") + theme(plot.title = element_text(size=8.5))
winsBar<-results_3 %>%
dplyr::filter(position==1) %>%
dplyr::group_by(driverRef, circuitRef) %>%
dplyr::summarize(count=n()) %>%
dplyr::mutate(allWins = sum(count)) %>%
dplyr::filter(allWins>2) %>%
ggplot(aes(x=reorder(driverRef, allWins),y= count)) +
geom_bar(aes(fill=circuitRef),stat='identity',color='white',size=.05) +
coord_flip() + theme_fivethirtyeight() +
theme(text = element_text(size = 10),element_line(size=3)) +
scale_fill_manual(name="",values = viridis::viridis(75)) +
guides(fill=guide_legend(ncol=6)) +
theme(legend.text= element_text(size=6),
legend.key.size = unit(.1, "cm"),
legend.position=c(.65,.20)) +
labs(title="Number of victories per Driver",
subtitle="only drivers with 2 or more wins are shown.")
winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 22, xmax = 50, ymin = 31, ymax = 90)
#winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 30, xmax = 30, ymin = 29, ymax = 95)
winsDis<-results_3 %>%
filter(position==1) %>%
group_by(driverRef, circuitRef) %>%
summarize(count=n()) %>%
mutate(allWins = sum(count)) %>%
ggplot(aes(x=allWins)) +
geom_histogram(bins=30) + theme_fivethirtyeight() + ggtitle("Distribution of the number of victories") + theme(plot.title = element_text(size=8.5))
winsBar<-results_3 %>%
dplyr::filter(position==1) %>%
dplyr::group_by(driverRef, circuitRef) %>%
dplyr::summarize(count=n()) %>%
dplyr::mutate(allWins = sum(count)) %>%
dplyr::filter(allWins>2) %>%
ggplot(aes(x=reorder(driverRef, allWins),y= count)) +
geom_bar(aes(fill=circuitRef),stat='identity',color='white',size=.05) +
coord_flip() + theme_fivethirtyeight() +
theme(text = element_text(size = 10),element_line(size=3)) +
scale_fill_manual(name="",values = viridis::viridis(75)) +
guides(fill=guide_legend(ncol=6)) +
theme(legend.text= element_text(size=6),
legend.key.size = unit(.1, "cm"),
legend.position=c(.65,.20)) +
labs(title="Number of victories per Driver",
subtitle="only drivers with 2 or more wins are shown.")
winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 22, xmax = 50, ymin = 31, ymax = 90)
#winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 30, xmax = 30, ymin = 29, ymax = 95)
```{r fig.height = 1000, fig.width = 5}
winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 22, xmax = 50, ymin = 31, ymax = 90)
#winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 30, xmax = 30, ymin = 29, ymax = 95)
winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 22, xmax = 50, ymin = 31, ymax = 90)
winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 22, xmax = 50, ymin = 31, ymax = 90)
#winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 30, xmax = 30, ymin = 29, ymax = 95)
winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 22, xmax = 50, ymin = 31, ymax = 90)
#winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 30, xmax = 30, ymin = 29, ymax = 95)
winsDis<-results_3 %>%
filter(position==1) %>%
group_by(driverRef, circuitRef) %>%
summarize(count=n()) %>%
mutate(allWins = sum(count)) %>%
ggplot(aes(x=allWins)) +
geom_histogram(bins=30) + theme_fivethirtyeight() + ggtitle("Distribution of the number of victories") + theme(plot.title = element_text(size=8.5))
winsBar<-results_3 %>%
dplyr::filter(position==1) %>%
dplyr::group_by(driverRef, circuitRef) %>%
dplyr::summarize(count=n()) %>%
dplyr::mutate(allWins = sum(count)) %>%
dplyr::filter(allWins>2) %>%
ggplot(aes(x=reorder(driverRef, allWins),y= count)) +
geom_bar(aes(fill=circuitRef),stat='identity',color='white',size=.001) +
coord_flip() + theme_fivethirtyeight() +
theme(text = element_text(size = 10),element_line(size=3)) +
scale_fill_manual(name="",values = viridis::viridis(75)) +
guides(fill=guide_legend(ncol=6)) +
theme(legend.text= element_text(size=10),
legend.key.size = unit(.1, "cm"),
legend.position=c(.65,.20)) +
labs(title="Number of victories per Driver",
subtitle="only drivers with 2 or more wins are shown.")
winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 22, xmax = 50, ymin = 31, ymax = 90)
#winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 30, xmax = 30, ymin = 29, ymax = 95)
winsDis<-results_3 %>%
filter(position==1) %>%
group_by(driverRef, circuitRef) %>%
summarize(count=n()) %>%
mutate(allWins = sum(count)) %>%
ggplot(aes(x=allWins)) +
geom_histogram(bins=30) + theme_fivethirtyeight() + ggtitle("Distribution of the number of victories") + theme(plot.title = element_text(size=8.5))
winsBar<-results_3 %>%
dplyr::filter(position==1) %>%
dplyr::group_by(driverRef, circuitRef) %>%
dplyr::summarize(count=n()) %>%
dplyr::mutate(allWins = sum(count)) %>%
dplyr::filter(allWins>2) %>%
ggplot(aes(x=reorder(driverRef, allWins),y= count)) +
geom_bar(aes(fill=circuitRef),stat='identity',color='white',size=.001) +
coord_flip() + theme_fivethirtyeight() +
theme(text = element_text(size = 12),element_line(size=3)) +
scale_fill_manual(name="",values = viridis::viridis(75)) +
guides(fill=guide_legend(ncol=6)) +
theme(legend.text= element_text(size=8.5),
legend.key.size = unit(.1, "cm"),
legend.position=c(.65,.20)) +
labs(title="Number of victories per Driver",
subtitle="only drivers with 2 or more wins are shown.")
winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 22, xmax = 50, ymin = 31, ymax = 90)
#winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 30, xmax = 30, ymin = 29, ymax = 95)
winsDis<-results_3 %>%
filter(position==1) %>%
group_by(driverRef, circuitRef) %>%
summarize(count=n()) %>%
mutate(allWins = sum(count)) %>%
ggplot(aes(x=allWins)) +
geom_histogram(bins=30) + theme_fivethirtyeight() + ggtitle("Distribution of the number of victories") + theme(plot.title = element_text(size=8.5))
winsBar<-results_3 %>%
dplyr::filter(position==1) %>%
dplyr::group_by(driverRef, circuitRef) %>%
dplyr::summarize(count=n()) %>%
dplyr::mutate(allWins = sum(count)) %>%
dplyr::filter(allWins>2) %>%
ggplot(aes(x=reorder(driverRef, allWins),y= count)) +
geom_bar(aes(fill=circuitRef),stat='identity',color='white',size=.001) +
coord_flip() + theme_fivethirtyeight() +
theme(text = element_text(size = 14),element_line(size=3)) +
scale_fill_manual(name="",values = viridis::viridis(75)) +
guides(fill=guide_legend(ncol=6)) +
theme(legend.text= element_text(size=10),
legend.key.size = unit(.1, "cm"),
legend.position=c(.75,.20)) +
labs(title="Number of victories per Driver",
subtitle="only drivers with 2 or more wins are shown.")
winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 22, xmax = 50, ymin = 31, ymax = 90)
#winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 30, xmax = 30, ymin = 29, ymax = 95)
knitr::opts_chunk$set(echo = TRUE,message=FALSE,warning=FALSE)
#load packages and csv file
library(ggplot2)
library(dplyr)
library(gridExtra)
library(ggthemes)
library(RColorBrewer)
library(grid)
library(gridExtra)
library(ggrepel)
library(viridis)
library(circlize)
results<-read.csv('../data/kaggle/results.csv',sep=',',stringsAsFactors=F)
#convert character to numeric
results$fastestLapSpeed<-as.numeric(results$fastestLapSpeed)
#convert FastestLap(character) tonumeric(secondes)
convertFastestLap<-function(x){
if(length(x)>0){
curMinute<-as.numeric(strsplit(x,":")[[1]][1])
curSecond<-as.numeric(strsplit(strsplit(x,":")[[1]][2],"\\.")[[1]][1])
return(curMinute*60 + curSecond)
}
else if(length(x)==0){
return(NA)
}
}
results$fastestLapTimeNum<-sapply(results$fastestLapTime, convertFastestLap)
races<-read.csv('../data/kaggle/races.csv',stringsAsFactors=F,sep=',')
#convert character to Date
races$date<-as.Date(races$date,"%Y-%m-%d")
#remove "Grand Prix" in the name
races$name<-gsub(" Grand Prix","",races$name)
results_2<-left_join(
results %>% dplyr::select(-time, -fastestLapTime),
races %>% dplyr::select(-time, -url),
by='raceId')
circuits<-read.csv("../data/kaggle/circuits.csv",sep=",",stringsAsFactors=F)
races<-left_join(races %>% select(-name,-url), circuits %>% select(-url), by='circuitId')
results_2 %>%
dplyr::filter(year>2004) %>%
dplyr::group_by(name,year) %>%
summarize(medianFastestLapSpeed = median(fastestLapSpeed,na.rm=T)) %>%
ggplot(aes(x=factor(year),y= medianFastestLapSpeed,color=medianFastestLapSpeed)) +
geom_point() + theme_fivethirtyeight() +
scale_color_gradientn(name="",colours=rev(viridis::viridis(20))) +
theme(
axis.text.x = element_text(size=6,angle=45),
strip.text.x = element_text(size = 10)) + facet_wrap(~name,ncol=9) +
labs(title='Fastest Lap per Circuit, from 2005 to 2022',
subtitle='speed in km/h') +
guides(color=FALSE)
results_2 %>%
dplyr::filter(year>2004) %>%
dplyr::group_by(name,year) %>%
summarize(medianFastestLapSpeed = median(fastestLapSpeed,na.rm=T)) %>%
ggplot(aes(x=factor(year),y= medianFastestLapSpeed,color=medianFastestLapSpeed)) +
geom_boxplot(alpha=.25) + theme_fivethirtyeight() +
geom_jitter(shape=16,position=position_jitter(0.2),size=1.5) +
geom_smooth(method='loess',aes(group=1),color='red',lty=2,size=.5) +
scale_color_gradientn(name="",colours=rev(viridis::viridis(20))) +
theme(text = element_text(size = 25))  +
labs(title='Fastest Lap per Year' ,
subtitle='in km/h, grouped by Grand Prix') +
guides(color = FALSE)
results_2 %>%
dplyr::filter(year>2004) %>%
dplyr::group_by(name) %>%
ggplot(aes(x=fastestLapSpeed)) +
geom_histogram(bins=100) + theme_fivethirtyeight() +
scale_color_gradientn(name="",colours=rev(viridis::viridis(20))) +
theme(
axis.text.x = element_text(size=6,angle=45),
strip.text.x = element_text(size = 10)) + facet_wrap(~name,ncol=9) +
labs(title='Fastest Lap distribution per Circuit',
subtitle='speed in km/h, grouped by years') +
guides(color=FALSE)
results_2 %>%
dplyr::filter(year>2004) %>%
dplyr::group_by(name,year) %>%
summarize(medianFastestLapTimeNum = median(fastestLapTimeNum,na.rm=T)) %>%
ggplot(aes(x=factor(year),y= medianFastestLapTimeNum, color=medianFastestLapTimeNum)) +
geom_boxplot(alpha=.25) + theme_fivethirtyeight() +
geom_jitter(shape=16,position=position_jitter(0.2),size=2) +
geom_smooth(method='loess',aes(group=1),color='red',lty=2,size=.5) +
scale_color_gradientn(name="",colours=rev(viridis::viridis(20))) +
theme(text = element_text(size = 25))  +
labs(title='Lap time per Year',
subtitle='in seconds, grouped by Grand Prix') +
guides(color = FALSE)
results_2 %>%
dplyr::filter(year>2004) %>%
dplyr::group_by(name,year) %>%
summarize(medianFastestLapTimeNum = median(fastestLapTimeNum,na.rm=T)) %>%
ggplot(aes(x=factor(year),y= medianFastestLapTimeNum, color=medianFastestLapTimeNum)) +
geom_point() + theme_fivethirtyeight() +
scale_color_gradientn(name="",colours=rev(viridis::viridis(20))) +
theme(
axis.text.x = element_text(size=6,angle=45),
strip.text.x = element_text(size = 10)) + facet_wrap(~name,ncol=9) +
labs(title='Lap time per Year, from 2005 to 2022',
subtitle='in seconds') +
guides(color=FALSE)
drivers<-read.csv('../data/kaggle/drivers.csv',sep=',',stringsAsFactors=F)
#calculate the driver's age in 2017
drivers$age_driver <- 2022 - sapply(drivers$dob, function(x) as.numeric(strsplit(x,'/')[[1]][3]))
#load driversStandings
driversStandings<-read.csv('../data/kaggle/driver_standings.csv',sep=',',stringsAsFactors=F)
drivers<-left_join(drivers %>% select(-url), driversStandings,by='driverId')
#results_3<-
#  left_join(
#    results,
#    drivers %>% dplyr::rename(number_drivers = number) %>% select(-points, -position, -positionText),
#    by=c('driverId','raceId')) %>%
#  left_join(races %>% select(-time), by='raceId')
results_3<-left_join(
results,
drivers %>% dplyr::rename(number_drivers = number) %>% select(-points, -position, -positionText),
by=c('driverId','raceId'))
results_3<-left_join(results_3,races %>% select(-time), by='raceId')
winsDis<-results_3 %>%
filter(position==1) %>%
group_by(driverRef, circuitRef) %>%
summarize(count=n()) %>%
mutate(allWins = sum(count)) %>%
ggplot(aes(x=allWins)) +
geom_histogram(bins=30) + theme_fivethirtyeight() + ggtitle("Distribution of the number of victories") + theme(plot.title = element_text(size=8.5))
winsBar<-results_3 %>%
dplyr::filter(position==1) %>%
dplyr::group_by(driverRef, circuitRef) %>%
dplyr::summarize(count=n()) %>%
dplyr::mutate(allWins = sum(count)) %>%
dplyr::filter(allWins>2) %>%
ggplot(aes(x=reorder(driverRef, allWins),y= count)) +
geom_bar(aes(fill=circuitRef),stat='identity',color='white',size=.001) +
coord_flip() + theme_fivethirtyeight() +
theme(text = element_text(size = 16),element_line(size=3)) +
scale_fill_manual(name="",values = viridis::viridis(75)) +
guides(fill=guide_legend(ncol=6)) +
theme(legend.text= element_text(size=12),
legend.key.size = unit(.1, "cm"),
legend.position=c(.65,.30)) +
labs(title="Number of victories per Driver",
subtitle="only drivers with 2 or more wins are shown.")
winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 22, xmax = 50, ymin = 31, ymax = 90)
#winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 30, xmax = 30, ymin = 29, ymax = 95)
winsDis<-results_3 %>%
filter(position==1) %>%
group_by(driverRef, circuitRef) %>%
summarize(count=n()) %>%
mutate(allWins = sum(count)) %>%
ggplot(aes(x=allWins)) +
geom_histogram(bins=30) + theme_fivethirtyeight() + ggtitle("Distribution of the number of victories") + theme(plot.title = element_text(size=8.5))
winsBar<-results_3 %>%
dplyr::filter(position==1) %>%
dplyr::group_by(driverRef, circuitRef) %>%
dplyr::summarize(count=n()) %>%
dplyr::mutate(allWins = sum(count)) %>%
dplyr::filter(allWins>2) %>%
ggplot(aes(x=reorder(driverRef, allWins),y= count)) +
geom_bar(aes(fill=circuitRef),stat='identity',color='white',size=.001) +
coord_flip() + theme_fivethirtyeight() +
theme(text = element_text(size = 16),element_line(size=3)) +
scale_fill_manual(name="",values = viridis::viridis(75)) +
guides(fill=guide_legend(ncol=4)) +
theme(legend.text= element_text(size=12),
legend.key.size = unit(.1, "cm"),
legend.position=c(.65,.30)) +
labs(title="Number of victories per Driver",
subtitle="only drivers with 2 or more wins are shown.")
winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 22, xmax = 50, ymin = 31, ymax = 90)
#winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 30, xmax = 30, ymin = 29, ymax = 95)
winsDis<-results_3 %>%
filter(position==1) %>%
group_by(driverRef, circuitRef) %>%
summarize(count=n()) %>%
mutate(allWins = sum(count)) %>%
ggplot(aes(x=allWins)) +
geom_histogram(bins=30) + theme_fivethirtyeight() + ggtitle("Distribution of the number of victories") + theme(plot.title = element_text(size=8.5))
winsBar<-results_3 %>%
dplyr::filter(position==1) %>%
dplyr::group_by(driverRef, circuitRef) %>%
dplyr::summarize(count=n()) %>%
dplyr::mutate(allWins = sum(count)) %>%
dplyr::filter(allWins>2) %>%
ggplot(aes(x=reorder(driverRef, allWins),y= count)) +
geom_bar(aes(fill=circuitRef),stat='identity',color='white',size=.001) +
coord_flip() + theme_fivethirtyeight() +
theme(text = element_text(size = 16),element_line(size=3)) +
scale_fill_manual(name="",values = viridis::viridis(75)) +
guides(fill=guide_legend(ncol=4)) +
theme(legend.text= element_text(size=12),
legend.key.size = unit(.1, "cm"),
legend.position=c(.65,.20)) +
labs(title="Number of victories per Driver",
subtitle="only drivers with 2 or more wins are shown.")
winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 22, xmax = 50, ymin = 31, ymax = 90)
#winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 30, xmax = 30, ymin = 29, ymax = 95)
winsDis<-results_3 %>%
filter(position==1) %>%
group_by(driverRef, circuitRef) %>%
summarize(count=n()) %>%
mutate(allWins = sum(count)) %>%
ggplot(aes(x=allWins)) +
geom_histogram(bins=30) + theme_fivethirtyeight() + ggtitle("Distribution of the number of victories") + theme(plot.title = element_text(size=8.5))
winsBar<-results_3 %>%
dplyr::filter(position==1) %>%
dplyr::group_by(driverRef, circuitRef) %>%
dplyr::summarize(count=n()) %>%
dplyr::mutate(allWins = sum(count)) %>%
dplyr::filter(allWins>2) %>%
ggplot(aes(x=reorder(driverRef, allWins),y= count)) +
geom_bar(aes(fill=circuitRef),stat='identity',color='white',size=.001) +
coord_flip() + theme_fivethirtyeight() +
theme(text = element_text(size = 16),element_line(size=3)) +
scale_fill_manual(name="",values = viridis::viridis(75)) +
guides(fill=guide_legend(ncol=4)) +
theme(legend.text= element_text(size=12),
legend.key.size = unit(.1, "cm"),
legend.position=c(.65,.15)) +
labs(title="Number of victories per Driver",
subtitle="only drivers with 2 or more wins are shown.")
winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 22, xmax = 50, ymin = 31, ymax = 90)
#winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 30, xmax = 30, ymin = 29, ymax = 95)
winsDis<-results_3 %>%
filter(position==1) %>%
group_by(driverRef, circuitRef) %>%
summarize(count=n()) %>%
mutate(allWins = sum(count)) %>%
ggplot(aes(x=allWins)) +
geom_histogram(bins=30) + theme_fivethirtyeight() + ggtitle("Distribution of the number of victories") + theme(plot.title = element_text(size=8.5))
winsBar<-results_3 %>%
dplyr::filter(position==1) %>%
dplyr::group_by(driverRef, circuitRef) %>%
dplyr::summarize(count=n()) %>%
dplyr::mutate(allWins = sum(count)) %>%
dplyr::filter(allWins>2) %>%
ggplot(aes(x=reorder(driverRef, allWins),y= count)) +
geom_bar(aes(fill=circuitRef),stat='identity',color='white',size=.001) +
coord_flip() + theme_fivethirtyeight() +
theme(text = element_text(size = 16),element_line(size=3)) +
scale_fill_manual(name="",values = viridis::viridis(75)) +
guides(fill=guide_legend(ncol=4)) +
theme(legend.text= element_text(size=12),
legend.key.size = unit(.1, "cm"),
legend.position=c(.65,.17)) +
labs(title="Number of victories per Driver",
subtitle="only drivers with 2 or more wins are shown.")
winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 22, xmax = 50, ymin = 31, ymax = 90)
#winsBar + annotation_custom(grob = ggplotGrob(winsDis), xmin = 30, xmax = 30, ymin = 29, ymax = 95)
constructors<-read.csv('../data/kaggle/constructors.csv',sep=',',stringsAsFactors=F)
constructorStandings<-read.csv('../data/kaggle/constructor_standings.csv',sep=',',stringsAsFactors=F)
constructorResults<-read.csv("../data/kaggle/constructor_results.csv",sep=",",stringsAsFactors=F)
constructorResults<-left_join(
constructorResults,
races %>% rename(name_races = name), by='raceId')
constructorResults <- left_join(constructorResults, constructors %>% select(-url) %>% rename(name_constructor = name), by='constructorId')
constructorResults <- left_join(constructorResults, constructorStandings %>% rename(point_constructor = points), by=c('constructorId','raceId'))
winConstructors<-constructorResults %>%
filter(wins == 1) %>%
group_by(name_constructor) %>%
summarize(count=n()) %>%
filter(count>0) %>%
ggplot(aes(x=reorder(name_constructor, count),y= count,fill=count)) +
geom_bar(stat='identity',color='white',size=.1) +
coord_flip() + theme_fivethirtyeight() +
scale_fill_gradientn(name="",colors = viridis::viridis(10)) +
guides(fill=guide_legend(ncol=3)) +
theme(legend.text= element_text(size=10),
legend.key.size = unit(.1, "cm"),
legend.position=c(.65,.20)) +
labs(title="Number of victories per Constructor",
subtitle="only Constructor with 1 or more wins are shown.") + guides(fill=F)
top5Constructors<-constructorResults %>%
filter(name_constructor %in% c('Ferrari','McLaren','Williams','Brabham','BRM')) %>%
filter(wins == 1) %>% group_by(name_constructor,year) %>%
summarize(count=n()) %>%
ggplot(aes(x=factor(year),y=count)) +
geom_histogram(aes(fill=name_constructor),
stat='identity',
position="fill",
size=1.5) +
theme_fivethirtyeight() + scale_fill_brewer(name="",palette='Paired') +
theme(axis.text.x = element_text(size=8,angle=45)) + ggtitle("Top 5 constructors's wins per year")
winConstructors +
annotation_custom(grob = ggplotGrob(top5Constructors), xmin = 20, xmax = 0, ymin = 20, ymax = 200)
